<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrl.store.mapper.UserMapper">
    <!--UserMapper的xml映射文件-->
    <!--添加用户方法的映射-->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="uid">
        insert into store.t_user (uid, username, password, salt, phone, email, gender, avatar, is_delete, created_user,
                                  created_time, modified_user, modified_time)
        VALUES (#{uid}, #{username}, #{password}, #{salt}, #{phone}, #{email},
                #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime},
                #{modifiedUser}, #{modifiedTime})
    </insert>

    <!--自定义映射规则：-->
    <!--id标签必须要，是数据库据中的主键-->
    <resultMap id="UserEntityMap" type="com.zrl.store.entity.User">
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!--根据用户名查询的映射-->
    <!--result：映射规则-->
    <select id="findUserByUsername" resultMap="UserEntityMap">
        select *
        from store.t_user
        where username = #{username}
    </select>

    <!--根据uid查找用户-->
<!--    <select id="findUserByUid" resultMap="UserEntityMap">
        select *
        from store.t_user
        where uid = #{uid}
    </select>-->

    <!--根据uid修改用户密码-->
<!--    <update id="updatePasswordByUid">
        update store.t_user
        set password      = #{newPassword},
            modified_user = #{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>-->

</mapper>